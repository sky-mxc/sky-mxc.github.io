<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[ContentProvider]]></title>
      <url>https://sky-mxc.github.io/2016/10/03/ContentProvider/</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>sky-mxc 总结</strong> 转载注明:<a href="https://sky-mxc.github.io">https://sky-mxc.github.io</a></p>
</blockquote>
<h1 id="ContentProvider"><a href="#ContentProvider" class="headerlink" title="ContentProvider"></a>ContentProvider</h1><blockquote>
<p>内容提供者，应用程序间的数据交互，是为存储和获取数据提供的统一接口。<br>Contentprovider为应用间数据交互提供了安全的环境，它允许把自己的应用数据开放给其他应用进行 CRUD。怎么样进行操作可以自己规定，不用担心权限的问题。</p>
</blockquote>
<p><br></p>
<blockquote>
<p>当然如果不想被被人读取自己应用的数据就不需要这个内容提供者。<br><br><br>ContentResolver来访问和操作我们的数据。<br>ContentResolver 通过我们注册的uri就可以找到我们开放的数据。</p>
</blockquote>
<p>关于uri 参考这篇文章：<a href="http://blog.csdn.net/dlutbrucezhang/article/details/8917303" target="_blank" rel="external">http://blog.csdn.net/dlutbrucezhang/article/details/8917303</a></p>
<h2 id="创建一个ContentProvider"><a href="#创建一个ContentProvider" class="headerlink" title="创建一个ContentProvider"></a>创建一个ContentProvider</h2><blockquote>
<p>创建自己的内容提供程序 只需继承ContentProvider即可。<br>这里就以insert 和 query 为例</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> com.skymxc.demo.contentprovider.util;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.ContentProvider;</div><div class="line"><span class="keyword">import</span> android.content.ContentUris;</div><div class="line"><span class="keyword">import</span> android.content.ContentValues;</div><div class="line"><span class="keyword">import</span> android.content.UriMatcher;</div><div class="line"><span class="keyword">import</span> android.database.Cursor;</div><div class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</div><div class="line"><span class="keyword">import</span> android.net.Uri;</div><div class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</div><div class="line"><span class="keyword">import</span> android.text.TextUtils;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by sky-mxc</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> DBHelper dbHelper;</div><div class="line">    <span class="keyword">private</span> UriMatcher uriMatcher;</div><div class="line"></div><div class="line">    <span class="comment">//匹配结果是一张表</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STUDENTS = <span class="number">1</span>;</div><div class="line">    <span class="comment">//匹配结果是一个条数据</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> STUDENT = <span class="number">2</span>;</div><div class="line">    <span class="comment">//一般是包名 避免重复</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">"com.skymxc.demo"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        dbHelper = <span class="keyword">new</span> DBHelper(getContext());</div><div class="line">        <span class="comment">//初始化 uri匹配者   UriMatcher.NO_MATCH：匹配不上时返回</span></div><div class="line">        uriMatcher = <span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</div><div class="line"></div><div class="line">        <span class="comment">//添加能够匹配的uri格式 参数1authorities 匹配住机。  参数2 匹配路径   参数3 code ： match success  return this code；</span></div><div class="line">        <span class="comment">// 代表这个uri 操作的是一个表，匹配码是 STUDENTS</span></div><div class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"student"</span>, STUDENTS);</div><div class="line">        <span class="comment">//代表这个uri 操作的是一条数据 匹配成功后返回 STUDENT</span></div><div class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"student/#"</span>,STUDENT);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     *  查询操作</div><div class="line">     * <span class="doctag">@param</span> uri</div><div class="line">     * <span class="doctag">@param</span> projection 要查询的列</div><div class="line">     * <span class="doctag">@param</span> condition 查询条件</div><div class="line">     * <span class="doctag">@param</span> values 查询参数</div><div class="line">     * <span class="doctag">@param</span> sortOrder 排序</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String condition, String[] values, String sortOrder)</span> </span>&#123;</div><div class="line">        Cursor cursor =<span class="keyword">null</span>;</div><div class="line">        SQLiteDatabase db= dbHelper.getDB();</div><div class="line">        <span class="comment">//匹配这个uri 要查询一张表还是 某条数据</span></div><div class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri))&#123;</div><div class="line">            <span class="keyword">case</span> STUDENT:</div><div class="line">                <span class="comment">//查询某条数据  ContentUris  :工具类 可以解析出id</span></div><div class="line">                <span class="keyword">long</span> id= ContentUris.parseId(uri);</div><div class="line">                String where =<span class="string">"_id ="</span>+id+<span class="string">" "</span>;</div><div class="line">                <span class="keyword">if</span> (!TextUtils.isEmpty(condition))&#123;</div><div class="line">                    where+= <span class="string">" and "</span>+condition;</div><div class="line">                &#125;</div><div class="line">               cursor= db.query(DBHelper.TABLE_NAME,projection,where,values,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> STUDENTS:</div><div class="line">                <span class="comment">//查询一张表</span></div><div class="line">                cursor = db.query(DBHelper.TABLE_NAME,projection,condition,values,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"match fail 。uri:"</span>+uri+<span class="string">""</span>);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> cursor;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</div><div class="line">        String type=<span class="string">"unKnow"</span>;</div><div class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri))&#123;</div><div class="line">            <span class="keyword">case</span> STUDENT:</div><div class="line">                type=<span class="string">"vnd.android.cursor.item/student"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> STUDENTS:</div><div class="line">                type= <span class="string">"vnd.android.cursor.dir/student"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</div><div class="line">        SQLiteDatabase db = dbHelper.getDB();</div><div class="line">        <span class="keyword">switch</span> (uriMatcher.match(uri))&#123;</div><div class="line">            <span class="keyword">case</span> STUDENT:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> STUDENTS:</div><div class="line">                db.insert(DBHelper.TABLE_NAME,<span class="string">"_id"</span>,values);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> uri;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection, String[] selectionArgs)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>创建完之后还需要在manifest文件中注册 才能被其他应用看到，通过 <provider>元素注册一个内容提供者</provider></p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--</span></div><div class="line">    android:exported 设置此provider是否可以被其他应用使用。</div><div class="line">    android:readPermission 该provider的读权限的标识</div><div class="line">    android:writePermission 该provider的写权限标识</div><div class="line">    android:permission provider读写权限标识</div><div class="line">    android:grantUriPermissions 临时权限标识</div><div class="line"></div><div class="line">--&gt;</div><div class="line"><span class="tag">&lt;<span class="name">provider</span></span></div><div class="line">    <span class="attr">android:authorities</span>=<span class="string">"com.skymxc.demo"</span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".util.StudentProvider"</span></div><div class="line">    <span class="attr">android:exported</span>=<span class="string">"true"</span>/&gt;</div></pre></td></tr></table></figure>
<p><strong>关于临时权限标识 grantUriPermissions :true时，意味着该provider下所有数据均可被临时使用；false时，则反之，但可以通过设置<grant-uri-permission>标签来指定哪些路径可以被临时使用。这么说可能还是不容易理解，我们举个例子，比如你开发了一个邮箱应用，其中含有附件需要第三方应用打开，但第三方应用又没有向你申请该附件的读权限，但如果你设置了此标签，则可以在start第三方应用时，传入FLAG_GRANT_READ_URI_PERMISSION或FLAG_GRANT_WRITE_URI_PERMISSION来让第三方应用临时具有读写该数据的权限。</grant-uri-permission></strong><br><br></p>
<blockquote>
<p>到这里 一个简单的内容提供者就创建完成了</p>
</blockquote>
<hr>
<h2 id="ContentResolver"><a href="#ContentResolver" class="headerlink" title="ContentResolver"></a>ContentResolver</h2><blockquote>
<p>可以看做是客户端 与ContentProvider 对应 ，ContentProvider 负责提供数据操作接口 ，ContentResolver 可以调用ContentProvider的数据接口对数据进行操作</p>
</blockquote>
<p>为了测试上面定义的ContentProvider  ，另创建一个Module 进行读取</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    ContentResolver resolver= getContentResolver() ;</div><div class="line">    String uriStr =<span class="string">"content://com.skymxc.demo/student"</span>;</div><div class="line">   Cursor cursor= resolver.query(Uri.parse(uriStr),<span class="keyword">new</span> String[]&#123;<span class="string">"_id"</span>,<span class="string">"name"</span>,<span class="string">"age"</span>&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="string">"age"</span>);</div><div class="line">    StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"============student==================\n"</span>);</div><div class="line"></div><div class="line">        <span class="keyword">while</span> (cursor !=<span class="keyword">null</span> &amp;&amp;cursor.moveToNext())&#123;</div><div class="line"></div><div class="line">            <span class="keyword">long</span> id = cursor.getLong(cursor.getColumnIndex(<span class="string">"_id"</span>));</div><div class="line">            String name = cursor.getString(cursor.getColumnIndex(<span class="string">"name"</span>));</div><div class="line">            <span class="keyword">int</span> age = cursor.getInt(cursor.getColumnIndex(<span class="string">"age"</span>));</div><div class="line">            sb.append(<span class="string">"==="</span>+id+<span class="string">"===\n"</span>);</div><div class="line">            sb.append(<span class="string">"name:"</span>+name+<span class="string">"\n"</span>);</div><div class="line">            sb.append(<span class="string">"age:"</span>+age+<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">    sb.append(<span class="string">"============================"</span>);</div><div class="line">        tv.setText(sb.toString());</div><div class="line">    <span class="keyword">if</span> (cursor != <span class="keyword">null</span>)&#123;</div><div class="line">        cursor.close();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>insert<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</div><div class="line">    String name = etName.getText().toString();</div><div class="line">    String  age = etAge .getText().toString();</div><div class="line"></div><div class="line">    ContentResolver resolver = getContentResolver();</div><div class="line">    String uriStr=<span class="string">"content://com.skymxc.demo/student"</span>;</div><div class="line">    ContentValues cv = <span class="keyword">new</span> ContentValues();</div><div class="line">    cv.put(<span class="string">"name"</span>,name);</div><div class="line">    cv.put(<span class="string">"age"</span>,age);</div><div class="line">    resolver.insert(Uri.parse(uriStr),cv);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>ContentResolver 还可以用来操作 短信,联系人，多媒体等 数据，这里写个读取短信的实例</p>
<p>读取短信的权限<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;<span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_SMS"</span>/&gt;</span></div><div class="line">&gt;`</div></pre></td></tr></table></figure></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 短信查询</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">querySms</span><span class="params">()</span> </span>&#123;</div><div class="line">    String[] projection = <span class="keyword">new</span> String[]&#123;<span class="string">"_id"</span>,<span class="string">"address"</span>,<span class="string">"person"</span>,<span class="string">"body"</span>,<span class="string">"type"</span>&#125;;</div><div class="line">    StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"短信数据=============\n"</span>);</div><div class="line">    ContentResolver resolver= getContentResolver();</div><div class="line">    Cursor cursor = resolver.query(Uri.parse(<span class="string">"content://sms/"</span>),projection,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</div><div class="line">    <span class="keyword">while</span> (cursor != <span class="keyword">null</span> &amp;&amp; cursor.moveToNext())&#123;</div><div class="line">        sb.append(<span class="string">"id:"</span>+cursor.getInt(cursor.getColumnIndex(<span class="string">"_id"</span>)));</div><div class="line">        sb.append(<span class="string">"\naddress:"</span>+cursor.getString(cursor.getColumnIndex(<span class="string">"address"</span>)));</div><div class="line">        sb.append(<span class="string">"\nperson:"</span>+cursor.getString(cursor.getColumnIndex(<span class="string">"person"</span>)));</div><div class="line">        sb.append(<span class="string">"\nbody:"</span>+cursor.getString(cursor.getColumnIndex(<span class="string">"body"</span>)));</div><div class="line">        sb.append(<span class="string">"\ntype:"</span>+cursor.getString(cursor.getColumnIndex(<span class="string">"type"</span>)));</div><div class="line">        sb.append(<span class="string">"\n================================================="</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    tv.setText(sb.toString());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h2 id="ContentObserver"><a href="#ContentObserver" class="headerlink" title="ContentObserver"></a>ContentObserver</h2><blockquote>
<p>内容观察者，可以给某些数据注册观察者，当数据改变时做出有些操作</p>
<p>初始化观察者<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> ContentObserver  observer = <span class="keyword">new</span> ContentObserver(<span class="keyword">new</span> Handler()) &#123;</div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChange</span><span class="params">(<span class="keyword">boolean</span> selfChange)</span> </span>&#123;</div><div class="line">       <span class="keyword">super</span>.onChange(selfChange);</div><div class="line">       Log.e(<span class="string">"MainActivity"</span>,<span class="string">"======数据改变了==="</span>);</div><div class="line">   &#125;</div><div class="line">&#125;;</div><div class="line">`</div></pre></td></tr></table></figure></p>
<p>注册观察者<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Uri uri = Uri.parse(<span class="string">"content://"</span>+StudentProvider.AUTHORITY+<span class="string">"/student"</span>);</div><div class="line"><span class="comment">//为student 注册观察者</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * parameter1 观察的uri</div><div class="line"> * parameter2 uri的后代是否连带 观察</div><div class="line"> * parameter3 observer</div><div class="line"> */</div><div class="line">getContentResolver().registerContentObserver(uri,<span class="keyword">true</span>,observer);</div></pre></td></tr></table></figure></p>
<p>内容改变时 通知观察者</p>
</blockquote>
<p>系统会首先查找 uri 扫描（手机上）所有的注册的observer 的uri  匹配之后执行 observer的onChange 方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Nullable</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</div><div class="line">    SQLiteDatabase db = dbHelper.getDB();</div><div class="line">    <span class="keyword">int</span> line=<span class="number">0</span>;</div><div class="line">    <span class="keyword">switch</span> (uriMatcher.match(uri))&#123;</div><div class="line">        <span class="keyword">case</span> STUDENT:</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> STUDENTS:</div><div class="line">          line= (<span class="keyword">int</span>) db.insert(DBHelper.TABLE_NAME,<span class="string">"_id"</span>,values);</div><div class="line"></div><div class="line"></div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (line&gt;<span class="number">0</span>)&#123;</div><div class="line">        getContext().getContentResolver().notifyChange(uri,<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> uri;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>当在另一个应用插入数据时 change()调用<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">E/MainActivity: ======数据改变了===</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ACTION_SEND]]></title>
      <url>https://sky-mxc.github.io/2016/10/01/ACTION-SEND/</url>
      <content type="html"><![CDATA[<hr>
<blockquote>
<p><strong>sky-mxc 总结</strong> 转载注明:<a href="https://sky-mxc.github.io/2016/10/01/ACTION-SEND">https://sky-mxc.github.io</a></p>
</blockquote>
<hr>
<h1 id="不使用第三方-SDK-实现简单分享"><a href="#不使用第三方-SDK-实现简单分享" class="headerlink" title="不使用第三方 SDK 实现简单分享"></a>不使用第三方 SDK 实现简单分享</h1><blockquote>
<p>现在在Android系统中进行分享，主要有两种手段，一种是通过系统自带的来启动分享功能；第二种是通过第三方的SDK插件进行分享；今天先来看看系统自带的分享功能:Intent.ACTOIN_SEND;</p>
<ul>
<li>分享文本</li>
<li>分享图片+文本 （QQ和微信不支持，只能将图片和文本分两次分享，目前来看只有新浪微博支持）</li>
<li>分享多图片 （和上面一样 ，目前只有新浪微博可以同时分享图片和文本）</li>
<li>分享图片+文本至微信朋友圈 </li>
</ul>
</blockquote>
<h2 id="分享存文本内容"><a href="#分享存文本内容" class="headerlink" title="分享存文本内容"></a>分享存文本内容</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">share</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 简单分享</div><div class="line">     * 让用户去选择分享平台</div><div class="line">     * 只分享简单的文子</div><div class="line">     */</div><div class="line">    String context = etContext.getText().toString();</div><div class="line">    intent = <span class="keyword">new</span> Intent(Intent.ACTION_SEND);</div><div class="line">    intent.setType(<span class="string">"text/plain"</span>);</div><div class="line">    intent.putExtra(Intent.EXTRA_TEXT,context);</div><div class="line">    <span class="keyword">if</span>(hasApplication(intent))&#123;</div><div class="line">        <span class="comment">//没有默认选项 可以自定义dialog标题</span></div><div class="line">        startActivity(Intent.createChooser(intent,<span class="string">"分享一下"</span>));</div><div class="line">        <span class="comment">//系统默认主题</span></div><div class="line">        <span class="comment">//   startActivity(intent);</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在分享之前可以先查看一下手机上是否有分享平台，如果没有就给出提示可以增加用户友好度，通过 PackageManager的queryIntentActivities()查看是否有匹配intent的Activity<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 判断是否存在intent要启动的Activity</div><div class="line"> * <span class="doctag">@param</span> intent</div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">hasApplication</span><span class="params">(Intent intent)</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//查询是否有该intent要启动的Activity</span></div><div class="line">    List&lt;ResolveInfo&gt; resolveInfos= getPackageManager().queryIntentActivities(intent,<span class="number">0</span>);</div><div class="line">    log(resolveInfos.size()+<span class="string">""</span>);</div><div class="line">    <span class="keyword">return</span>  resolveInfos.size()&gt;<span class="number">0</span>?<span class="keyword">true</span>:<span class="keyword">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>另外 使用  Intent.createChooser()可以避免出现默认程序的可能，还可以定义弹出框的标题 ，友好程度更好一些,下面看一下两者的区别</p>
<blockquote>
<p>系统默认的主题( startActivity(intent))<br><img src="\images\Android\share_ACTION_SEND\system.png" alt="系统默认"><br><strong>使用 Intent.createChooser()</strong><br><img src="\images\Android\share_ACTION_SEND\createChooser.png" alt="Intent.createChooser()"></p>
</blockquote>
<hr>
<h2 id="分享文本-图片"><a href="#分享文本-图片" class="headerlink" title="分享文本+图片"></a>分享文本+图片</h2><blockquote>
<p>图片和文本一起分享 目前我测试的只有微博好使 ，QQ和微信 都只能分享图片，不接受文本<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 分享图片 和文本</div><div class="line"> * QQ 微信 不能图片和文本一起分享</div><div class="line"> * 微博可以实现图片和文本一起分享</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">shareChooser</span><span class="params">()</span> </span>&#123;</div><div class="line">    String context = etContext.getText().toString();</div><div class="line"></div><div class="line">    intent = <span class="keyword">new</span> Intent(Intent.ACTION_SEND);</div><div class="line">    intent.setType(<span class="string">"image/*"</span>);</div><div class="line">    intent.putExtra(Intent.EXTRA_TEXT,context);</div><div class="line">    intent.putExtra(Intent.EXTRA_STREAM,uri);</div><div class="line">    <span class="keyword">if</span> (hasApplication(intent))&#123;</div><div class="line">        startActivity(Intent.createChooser(intent,<span class="string">"选择要分享到的平台吧"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="分享多张图片"><a href="#分享多张图片" class="headerlink" title="分享多张图片"></a>分享多张图片</h2><blockquote>
<p>和上面一样 我测试 只有微博能同时分享图片和文本</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 分享多个图片</div><div class="line"> * 目前来看 只有微博能同时分享文本和内容</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sharePhototMult</span><span class="params">()</span> </span>&#123;</div><div class="line">    ArrayList&lt;Uri&gt; uris =<span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    uris.add(uri);</div><div class="line">    uris.add(uri);</div><div class="line">    intent = <span class="keyword">new</span> Intent(Intent.ACTION_SEND_MULTIPLE);</div><div class="line">    intent.setType(<span class="string">"image/*"</span>);</div><div class="line">    intent.putExtra(Intent.EXTRA_TEXT,<span class="string">"分享内容测试"</span>);</div><div class="line">    intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM,uris);</div><div class="line">    <span class="keyword">if</span>(hasApplication(intent))&#123;</div><div class="line">        startActivity(Intent.createChooser(intent,<span class="string">"选择分享平台"</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h2 id="分享-图片-文本到微信朋友圈"><a href="#分享-图片-文本到微信朋友圈" class="headerlink" title="分享 图片+文本到微信朋友圈"></a>分享 图片+文本到微信朋友圈</h2><blockquote>
<p>这个方式可以实现 图片+ 文本同时分享</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 分享图片去微信朋友圈</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sharePhotoToWX</span><span class="params">()</span> </span>&#123;</div><div class="line">    String wxPackage = <span class="string">"com.tencent.mm"</span>;</div><div class="line">    <span class="keyword">if</span> (checkPackage(wxPackage))&#123;</div><div class="line">        intent = <span class="keyword">new</span> Intent(Intent.ACTION_SEND);</div><div class="line"></div><div class="line">        intent.setClassName(wxPackage,<span class="string">"com.tencent.mm.ui.tools.ShareToTimeLineUI"</span>);</div><div class="line">        intent.setType(<span class="string">"image/*"</span>);</div><div class="line">        intent.putExtra(<span class="string">"Kdescription"</span>,<span class="string">"朋友圈分享测试"</span>);</div><div class="line">        intent.putExtra(Intent.EXTRA_STREAM,uri);</div><div class="line">        startActivity(intent);</div><div class="line"></div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        Toast.makeText(<span class="keyword">this</span>,<span class="string">"微信不存在"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Activity]]></title>
      <url>https://sky-mxc.github.io/2016/09/30/activity/</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>sky-mxc 总结</strong> 转载注明:<a href="https://sky-mxc.github.io/2016/09/30/activity">https://sky-mxc.github.io/2016/09/30/activity</a></p>
</blockquote>
<h1 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h1><ul>
<li>什么是Activity</li>
<li>创建Activity</li>
<li>启动Activity</li>
<li>保存Activity状态</li>
<li>Activity的生命周期</li>
</ul>
<hr>
<h2 id="acitivyt-是什么"><a href="#acitivyt-是什么" class="headerlink" title="acitivyt 是什么"></a>acitivyt 是什么</h2><blockquote>
<p>引用官方的说法：<br><em>是一个应用组件，用户可与其提供的屏幕进行交互，以执行拨打电话、拍摄照片、发送电子邮件或查看地图等操作。 每个 Activity 都会获得一个用于绘制其用户界面的窗口。窗口通常会充满屏幕，但也可小于屏幕并浮动在其他窗口之上</em></p>
</blockquote>
<h2 id="创建Activity"><a href="#创建Activity" class="headerlink" title="创建Activity"></a>创建Activity</h2><p>要创建Activity 必须继承自Activity或者Activity的子类。在Activity的各个生命阶段实现对应的方法；</p>
<blockquote>
<p>其中重要的两个方法:</p>
<p>onCreate() ,系统在创建Activity时调用此方法；在此方法实现视图绑定；一些 控件的初始化</p>
<p>onPuase();  用户离开当前Activity调用的第一个方法 ，</p>
<p>创建完成后必须在Manifest文件中 声明此Activity 系统才会知道有这个Activity</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span> &gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">application</span> <span class="attr">...</span> &gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".ExampleActivity"</span> /&gt;</span></div><div class="line">      ...</div><div class="line">  <span class="tag">&lt;/<span class="name">application</span> <span class="attr">...</span> &gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span> &gt;</span></div></pre></td></tr></table></figure>
<p>如果有需要也可以为此Activity添加IntentFilter(IntentFilter稍后我会再做总结),以供外部程序来启动，一般同一应用中不会用到隐式启动。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".AActivity"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.action.x1"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.action.x2"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.catagory.c1"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.catagory.c2"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"http"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>最简单的Activity 只绑定了一个视图<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="启动Activity"><a href="#启动Activity" class="headerlink" title="启动Activity"></a>启动Activity</h2><blockquote>
<p>可以通过一个intent 来启动 一个Activity ,关于intent稍后会做总结</p>
</blockquote>
<h3 id="明确目标启动"><a href="#明确目标启动" class="headerlink" title="明确目标启动"></a>明确目标启动</h3><p>在明确的指导要启动的Activity的时候可以显示使用intent来启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Intent intent = new Intent(this, SignInActivity.class);</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure>
<h3 id="传递数据"><a href="#传递数据" class="headerlink" title="传递数据"></a>传递数据</h3><p>如果需要传递数据，可以在intent中放入数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_SEND);</div><div class="line">intent.putExtra(<span class="string">"origin"</span>, <span class="string">"哈哈"</span>);</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure></p>
<p>获取数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Intent intent = getIntent();<span class="comment">//获取启动此activity的intent</span></div><div class="line">String origin = intent.getStringExtra(<span class="string">"origin"</span>);</div></pre></td></tr></table></figure></p>
<h3 id="不明确启动目标"><a href="#不明确启动目标" class="headerlink" title="不明确启动目标"></a>不明确启动目标</h3><p>在不明确要启动的Activity的时候 可以在intent中添加关于启动目标的描述和类型,系统会过滤所有的Activity的intentFilter来匹配 ；一般 在同一个应用中不必使用隐式Intent；</p>
<blockquote>
<p>例如 我在为A Activity添加这样的IntentFilter：</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".AActivity"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.action.x1"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.action.x2"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.catagory.c1"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"com.skymxc.catagory.c2"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"http"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>要启动上面的Activity可以这样写 </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Intent in = <span class="keyword">new</span> Intent();</div><div class="line"><span class="comment">////要执行的动作的描述 所有的action中 有一个匹配行</span></div><div class="line">in.setAction(<span class="string">"com.skymxc.action.x2"</span>);</div><div class="line"><span class="comment">//附加信息的描述 这里的描述只要在intentFilter中声明了就能匹配上，</span></div><div class="line"><span class="comment">// 如果有一项未声明则匹配不上，如果intentFilter中没有可以不添加，会使用默认的category</span></div><div class="line">in.addCategory(<span class="string">"com.skymxc.catagory.c2"</span>);</div><div class="line"><span class="comment">//对数据进行描述 C中定义了协议为 file</span></div><div class="line">in.setDataAndType(Uri.parse(<span class="string">"http://"</span>),<span class="string">"audio/13"</span>);</div><div class="line"><span class="keyword">if</span> (in.resolveActivity(getPackageManager())!=<span class="keyword">null</span>)&#123;</div><div class="line">    <span class="comment">//启动</span></div><div class="line">    startActivity(in);</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    Toast.makeText(<span class="keyword">this</span>,<span class="string">"系统中不存在可以执行此操作的程序"</span>,Toast.LENGTH_SHORT).show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="为某个结果启动一个Activity"><a href="#为某个结果启动一个Activity" class="headerlink" title="为某个结果启动一个Activity"></a>为某个结果启动一个Activity</h3><p>如果启动一个Activit只为获得某个结果 可以 使用 startActivityForResult() 来启动一个Activity ，在获得结果后会回调 方法：onActivityResult();</p>
<blockquote>
<p>去图库获取图片 第二个参数是请求码 在onActivityResult()中区分结果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Intent intent1 = <span class="keyword">new</span> Intent(Intent.ACTION_PICK);</div><div class="line">intent1.setData(MediaStore.Images.Media.EXTERNAL_CONTENT_URI);</div><div class="line"><span class="comment">//为了结果去启动一个Activity</span></div><div class="line">startActivityForResult(intent1,<span class="number">50</span>);</div></pre></td></tr></table></figure></p>
<p>onActivityResult()中获取到取得的图片<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> requestCode 启动时的 requestCode</div><div class="line"> * <span class="doctag">@param</span> resultCode 跳转的activity给的</div><div class="line"> * <span class="doctag">@param</span> data 跳转的activity给的 返回的数据</div><div class="line"> */</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line">    <span class="keyword">if</span> (requestCode== <span class="number">50</span> &amp;&amp; resultCode ==RESULT_OK &amp;&amp; data != <span class="keyword">null</span>)&#123;</div><div class="line">       Uri uri = data.getData(); <span class="comment">//返回是标识符指定图片所在的位置的统一资源标识符</span></div><div class="line">        img.setImageURI(uri);  <span class="comment">//设置给 ImageView</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<hr>
<h2 id="保存Activity的状态"><a href="#保存Activity的状态" class="headerlink" title="保存Activity的状态"></a>保存Activity的状态</h2><p>当用户 离开Activity去往另一个Activity时；Activity会被压入返回栈，如果内存不够就会被销毁 ，当Activity被销毁后其中的数据当然就没了，如果需要保留这些数据可调用 方法 onSaveInstanceState()方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState, PersistableBundle outPersistentState)</span> </span>&#123;</div><div class="line">    <span class="comment">//存入数据</span></div><div class="line">   outState.putBoolean(<span class="string">"checked"</span>,<span class="keyword">true</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当此Activity被创建时 就能取出数据了<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    <span class="keyword">if</span> (savedInstanceState!=<span class="keyword">null</span>)&#123;</div><div class="line">        <span class="keyword">boolean</span> checked = savedInstanceState.getBoolean(<span class="string">"checked"</span>);</div><div class="line">    &#125;</div><div class="line">    setContentView(R.layout.activity_main);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="Activity的生命周期"><a href="#Activity的生命周期" class="headerlink" title="Activity的生命周期"></a>Activity的生命周期</h2><p>看一张图描述了整个Activity由生到死的一套回调方法<br><img src="\images\Android\activity\activitlifcycle.png" alt="生命周期"></p>
<h3 id="回调方法说明"><a href="#回调方法说明" class="headerlink" title="回调方法说明"></a>回调方法说明</h3><blockquote>
<p>先说一下上图的方法：</p>
<ul>
<li>onCreate() :创建Activity ，可以在这里进行初始一些视图和数据 </li>
<li>onStart():   启动Activity ，这里你就可以看到 这个activity了</li>
<li>onResume(): 调用这个方法前 只能看到Activity 并不能进行交互 ，执行完此方法才可以进行交互 ，整个Activity就彻底的运行起来了</li>
<li>onPause()   :停止用户交互 你可以看到 但是 不能交互了  比如 启动另一个透明的Dialog Activity 你可以看到原本的Activity ，但是已经失去了焦点 ，无法交互</li>
<li>onStop() ：当前Activity被覆盖时调用 例如 当前activity1跳往到activity2 ，activity就会把activity1覆盖，这时就调用了此方法</li>
<li>onRestart();  重新启动</li>
<li>onDestroy():activity再结束前调用的最后一个方法;这里可以进行一些释放资源的操作</li>
</ul>
</blockquote>
<h3 id="三种阶段"><a href="#三种阶段" class="headerlink" title="三种阶段"></a>三种阶段</h3><blockquote>
<ul>
<li>完整生命周期：<br> 从调用的第一个方法 onCreate()  到最后调用一个的方法onDestroy()  ，在onCreate()方法中可以进行一些全局的配置，UI的引用，数据的初始化，也可以从savedInstanceState中读取 保存在设备中或者执行reCreate方法前保存的数据等前提savedInstanceSate不为null，在onDestroy(）方法中可以 释放资源等</li>
</ul>
<ul>
<li><p>可视周期：在执行onStart()和onStop(）之间  在这期间 你可以在屏幕上看到这个Activity但是 不能再前台跟用户交互 。只能看，可以理解为于禁用状态</p>
</li>
<li><p>前台周期：在执行onResume() 和 onPause() 之间，在这期间，用户就可以在前台和activity交互了。</p>
</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>关于这里提到的intent ，intentFilter 我会在之后总结。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[seekbar]]></title>
      <url>https://sky-mxc.github.io/2016/09/30/SeekBar/</url>
      <content type="html"><![CDATA[<h1 id="SeekBar-可拖动进度条"><a href="#SeekBar-可拖动进度条" class="headerlink" title="SeekBar 可拖动进度条"></a>SeekBar 可拖动进度条</h1><blockquote>
<p><strong>sky-mxc 总结</strong> 转载注明:<a href="https://sky-mxc.github.io/2016/09/30/SeekBar">https://sky-mxc.github.io/2016/09/30/SeekBar</a></p>
</blockquote>
<ul>
<li>常用属性</li>
<li>常用方法</li>
<li>自定义样式</li>
</ul>
<h2 id="常用的属性"><a href="#常用的属性" class="headerlink" title="常用的属性"></a>常用的属性</h2><ul>
<li>max            最大值</li>
<li>progress        进度值</li>
<li>secondaryProgress        第二进度条</li>
<li>progressDrawable        进度图片</li>
<li>thumb        拖拽按钮</li>
<li>thumbOffset        拖拽按钮位置补偿</li>
<li>maxHeight/maxWidth        最大宽高</li>
<li>minHeight/minWidth        最小宽高</li>
</ul>
<blockquote>
<p>可通过 maxHeight ，minHeight 控制 高度</p>
</blockquote>
<hr>
<h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><ul>
<li>setProgress()        设置进度值</li>
<li>getProgress()        获取进度值</li>
<li>setSecondaryProgress()        设置第二进度值</li>
<li>getSecondaryProgress()        获取第二进度值</li>
<li>setSeekBarChangeListener()        设置seekbar拖动改变监听</li>
</ul>
<hr>
<h2 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h2><ul>
<li>自定义 背景</li>
<li>自定义进度样式</li>
<li>自定义滑块</li>
</ul>
<blockquote>
<p>自定义背景和进度样式 这里使用简单的shape图片 通过 progressDrawable 属性设置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">layer-list</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:id</span>=<span class="string">"@android:id/background"</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">shape</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#353b35"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:id</span>=<span class="string">"@android:id/progress"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">clip</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">shape</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#10b410"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">clip</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>自定义滑块 通过 属性thumb 设置 这里也是通过shape图形绘制，滑块的高度 是可以自定义的 在这里就可以设置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--按下--&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">shape</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#b31395"</span>/&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:height</span>=<span class="string">"40dp"</span></span></div><div class="line">                    <span class="attr">android:width</span>=<span class="string">"20dp"</span>/&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_focused</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">shape</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#362d35"</span>/&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:height</span>=<span class="string">"40dp"</span></span></div><div class="line">                <span class="attr">android:width</span>=<span class="string">"20dp"</span>/&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> &gt;</span></div><div class="line"></div><div class="line">           <span class="tag">&lt;<span class="name">shape</span>&gt;</span></div><div class="line">               <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#362d35"</span>/&gt;</span></div><div class="line"></div><div class="line">               <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span></div><div class="line">               <span class="tag">&lt;<span class="name">size</span> <span class="attr">android:height</span>=<span class="string">"40dp"</span></span></div><div class="line">                   <span class="attr">android:width</span>=<span class="string">"20dp"</span>/&gt;</div><div class="line">           <span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>高度通过 minHeight maxHeight 设置</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">SeekBar</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/seek_bar_0"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:max</span>=<span class="string">"100"</span></div><div class="line">    <span class="attr">android:progress</span>=<span class="string">"20"</span></div><div class="line">    <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span></div><div class="line">    <span class="attr">android:maxHeight</span>=<span class="string">"20dp"</span></div><div class="line">    <span class="attr">android:minHeight</span>=<span class="string">"20dp"</span></div><div class="line">    <span class="attr">android:thumb</span>=<span class="string">"@drawable/selector_seek_thumb_bg"</span></div><div class="line">    <span class="attr">android:progressDrawable</span>=<span class="string">"@drawable/selector_seekbar_bg"</span>/&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>实例图<br><img src="\images\Android\SeekBar\Seekbar.png" alt="实例图"></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用github+hexo 搭建个人博客]]></title>
      <url>https://sky-mxc.github.io/2016/09/29/buildBlogs/</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>sky-mxc总结</strong> 转载注明：<a href="https://sky-mxc.github.io/2016/09/29/buildBlogs">https://sky-mxc.github.io/2016/09/29/buildBlogs</a></p>
</blockquote>
<h1 id="githubPages-hexo-搭建个人博客"><a href="#githubPages-hexo-搭建个人博客" class="headerlink" title="githubPages + hexo 搭建个人博客"></a>githubPages + hexo 搭建个人博客</h1><blockquote>
<p>hexo是基于git和Node.js的 必须先安装 git和Node.js;</p>
</blockquote>
<h2 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h2><blockquote>
<p>Node.js 下载地址 <a href="http://nodejs.cn/download/" target="_blank" rel="external">http://nodejs.cn/download/</a> 选择好安装路径之后一路 next就可以了;<br>检测是否安装成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node -v</div></pre></td></tr></table></figure></p>
<p>查看 npm是否安装 以前的版本没有集成npm，新版本已经集成了npn<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm -version</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="/images/github+hexo/checkNode.png" alt="image"></p>
<h2 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h2><blockquote>
<p>关于hexo 的安装 在官网有很详细的教程 ：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">https://hexo.io/zh-cn/docs/</a></p>
<p>安装 hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="/images/github+hexo/安装hexo.png" alt="image"></p>
<blockquote>
<p>检测安装是否成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo -v</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="/images/github+hexo/checkHexo.png" alt=""></p>
<blockquote>
<p>指定一个文件夹 必须是空目录 配置hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
</blockquote>
<p><img src="/images/github+hexo/initHexo.png" alt="image"><br><img src="/images/github+hexo/initHexo2.png" alt="image"></p>
<blockquote>
<p>安装完成后会生成一些文件 具体目录的用途 官网说的很清楚</p>
<ul>
<li>_config.yml   网站的配置信息。大部分的参数在这里配置</li>
<li>package.json    应用程序的信息</li>
<li>scaffolds  <strong>模板</strong> 文件夹</li>
<li>source     资源文件夹 存放 资源 如图片之类的；除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</li>
<li>themes   主题文件夹  Hexo很久主题生成静态页面</li>
</ul>
<p>剩下的就是配置了 主要是在 _config.yml中配置 怎么配置 官网也解释的跟清楚了。这里说一下主要的，详情移步官网查看:<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/configuration.html</a></p>
</blockquote>
<ul>
<li>title 网站标题</li>
<li>subtitle 子标题</li>
<li>description  网站描述</li>
<li>language  使用语言</li>
<li>author 你的名字</li>
</ul>
<p><img src="/images/github+hexo/settingHexo.png" alt="image"></p>
<blockquote>
<p>到这里基本上本地已经配置完了 现在可以 测试一下了</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g # 生成静态文件 生成文件在public 目录下</div><div class="line">$ hexo s # 启动本地预览 hexo s --debug 命令可以用来调试</div></pre></td></tr></table></figure>
<p><img src="/images/github+hexo/serverHexo.png" alt="image"><br><img src="/images/github+hexo/hexoTest0.png" alt="image"></p>
<h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><blockquote>
<p>首先在github上建一个repository 名字格式：[your_user_name.github.io]</p>
<p>例如我的  sky-mxc.github.io</p>
</blockquote>
<p><img src="/images/github+hexo/github仓库.png" alt=""></p>
<blockquote>
<p>要发布到 github 还得下载 一个组件( hexo-deployer-git) 执行命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p><em>还需要修改 _config.yml  ;参考官网得说明</em><br><img src="/images/github+hexo/发布到github前的配置.png" alt=""></p>
<p><strong>我的配置如下：</strong><br><img src="/images/github+hexo/我的发布配置.png" alt=""></p>
<p>配置完之后 就可以发布到 github上了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d  #发布</div></pre></td></tr></table></figure></p>
<p>发布完成之后 就可输入网址查看了 这里贴一下我的吧：<a href="https://sky-mxc.github.io">https://sky-mxc.github.io</a></p>
</blockquote>
<p><img src="/images/github+hexo/发布完成0.png" alt=""></p>
<blockquote>
<p><strong>这里就基本搭建完成了</strong> </p>
<p>常用 命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hexo clean # 清理之前的内容</div><div class="line">hexo g # 生成静态文件</div><div class="line">hexo d #部署</div><div class="line">hexo s # 启动本地服务 ，可以通过 http://localhost:4000查看</div><div class="line">hexo s --debug # 使用debug模式启动服务</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><blockquote>
<p>感觉默认主题有点low 关于主题的选择 这里贴个连接 <a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></p>
<p>我要更换的主题：<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html</a></p>
<p>在要theme 目录下 clone<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>
</blockquote>
<p>clone完成后 修改 _config.yml 将theme 的值修改为 next</p>
<p><img src="/images/github+hexo/修改主题.png" alt=""></p>
<blockquote>
<p>具体看官网配置：<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://sky-mxc.github.io/2016/09/04/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
